name: Automated Environment Sync

on:
  push:
    branches: [ main, master ]
    paths:
      - '.env.local.template'
      - '.env.example'
      - 'scripts/automated-env-sync.js'
  pull_request:
    branches: [ main, master ]
    paths:
      - '.env.local.template'
      - '.env.example'
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force sync even if validation fails'
        required: false
        default: 'false'
        type: boolean
      platforms:
        description: 'Platforms to sync (comma-separated: vercel,netlify)'
        required: false
        default: 'vercel'
        type: string

env:
  NODE_VERSION: '18'

jobs:
  validate-environment:
    name: Validate Environment Configuration
    runs-on: ubuntu-latest
    outputs:
      validation-passed: ${{ steps.validate.outputs.valid }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate environment configuration
        id: validate
        run: |
          echo "Running environment validation..."
          if node scripts/automated-env-sync.js validate; then
            echo "valid=true" >> $GITHUB_OUTPUT
            echo "✅ Environment validation passed"
          else
            echo "valid=false" >> $GITHUB_OUTPUT
            echo "❌ Environment validation failed"
            exit 1
          fi

      - name: Notify validation failure
        if: failure()
        run: |
          echo "Environment validation failed. Check the logs above for details."
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data '{"text":"🚨 Environment validation failed in ${{ github.repository }} (commit: ${{ github.sha }})"}' \
              ${{ secrets.SLACK_WEBHOOK_URL }}
          fi

  sync-to-platforms:
    name: Sync to Deployment Platforms
    runs-on: ubuntu-latest
    needs: validate-environment
    if: |
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') &&
      (needs.validate-environment.outputs.validation-passed == 'true' || github.event.inputs.force_sync == 'true')
    
    strategy:
      matrix:
        platform: [vercel, netlify]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create environment file from template
        run: |
          if [ -f ".env.local.template" ]; then
            cp .env.local.template .env.local
            echo "✅ Created .env.local from template"
          else
            echo "❌ .env.local.template not found"
            exit 1
          fi

      - name: Replace environment variables in .env.local
        run: |
          # Replace template values with actual secrets
          sed -i "s|VITE_SUPABASE_URL=.*|VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}|g" .env.local
          sed -i "s|VITE_SUPABASE_ANON_KEY=.*|VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}|g" .env.local
          sed -i "s|VITE_STRIPE_PUBLIC_KEY=.*|VITE_STRIPE_PUBLIC_KEY=${{ secrets.VITE_STRIPE_PUBLIC_KEY }}|g" .env.local
          sed -i "s|VITE_GOOGLE_MAPS_API_KEY=.*|VITE_GOOGLE_MAPS_API_KEY=${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}|g" .env.local
          sed -i "s|RESEND_API_KEY=.*|RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}|g" .env.local
          echo "✅ Environment variables replaced"

      - name: Sync to Vercel
        if: matrix.platform == 'vercel' && secrets.VERCEL_TOKEN
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          echo "🔄 Syncing to Vercel..."
          node scripts/automated-env-sync.js sync

      - name: Sync to Netlify
        if: matrix.platform == 'netlify' && secrets.NETLIFY_TOKEN
        env:
          NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          echo "🔄 Syncing to Netlify..."
          node scripts/automated-env-sync.js sync

      - name: Notify sync failure
        if: failure()
        run: |
          echo "❌ Sync to ${{ matrix.platform }} failed"
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data '{"text":"🚨 Environment sync to ${{ matrix.platform }} failed in ${{ github.repository }}"}' \
              ${{ secrets.SLACK_WEBHOOK_URL }}
          fi

  post-sync-validation:
    name: Post-Sync Validation
    runs-on: ubuntu-latest
    needs: [validate-environment, sync-to-platforms]
    if: always() && needs.sync-to-platforms.result == 'success'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for deployment propagation
        run: |
          echo "⏳ Waiting for deployment propagation..."
          sleep 30

      - name: Verify Vercel deployment
        if: secrets.VERCEL_TOKEN
        run: |
          echo "🔍 Verifying Vercel environment variables..."
          # Add verification logic here if needed

      - name: Verify Netlify deployment
        if: secrets.NETLIFY_TOKEN
        run: |
          echo "🔍 Verifying Netlify environment variables..."
          # Add verification logic here if needed

      - name: Send success notification
        if: success()
        run: |
          echo "✅ Environment sync completed successfully!"
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data '{"text":"✅ Environment sync completed successfully for ${{ github.repository }}! All platforms updated."}' \
              ${{ secrets.SLACK_WEBHOOK_URL }}
          fi

      - name: Generate sync report
        if: always()
        run: |
          echo "📊 Environment Sync Report" > sync-report.md
          echo "=========================" >> sync-report.md
          echo "" >> sync-report.md
          echo "**Repository:** ${{ github.repository }}" >> sync-report.md
          echo "**Commit:** ${{ github.sha }}" >> sync-report.md
          echo "**Branch:** ${{ github.ref_name }}" >> sync-report.md
          echo "**Triggered by:** ${{ github.actor }}" >> sync-report.md
          echo "**Timestamp:** $(date -u)" >> sync-report.md
          echo "" >> sync-report.md
          echo "**Validation Status:** ${{ needs.validate-environment.outputs.validation-passed }}" >> sync-report.md
          echo "**Sync Status:** ${{ needs.sync-to-platforms.result }}" >> sync-report.md
          echo "" >> sync-report.md
          echo "This report was generated automatically by the Environment Sync workflow." >> sync-report.md

      - name: Upload sync report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: environment-sync-report
          path: sync-report.md
          retention-days: 30