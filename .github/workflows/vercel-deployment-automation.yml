name: Vercel Deployment Automation

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  validate-environment:
    runs-on: ubuntu-latest
    name: Validate Environment Variables
    outputs:
      validation-status: ${{ steps.validate.outputs.status }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate environment variables
        id: validate
        run: |
          echo "Running environment validation..."
          node scripts/env-validator.js
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Notify validation failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#deployments'
          text: '❌ Environment validation failed for ${{ github.repository }}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  sync-environment:
    runs-on: ubuntu-latest
    needs: validate-environment
    if: needs.validate-environment.outputs.validation-status == 'success'
    name: Sync Environment to Vercel
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Sync environment variables
        run: |
          echo "Syncing environment variables to Vercel..."
          
          # Supabase Configuration
          vercel env add VITE_SUPABASE_URL production --token=${{ secrets.VERCEL_TOKEN }} <<< "${{ secrets.VITE_SUPABASE_URL }}"
          vercel env add VITE_SUPABASE_ANON_KEY production --token=${{ secrets.VERCEL_TOKEN }} <<< "${{ secrets.VITE_SUPABASE_ANON_KEY }}"
          vercel env add SUPABASE_SERVICE_ROLE_KEY production --token=${{ secrets.VERCEL_TOKEN }} <<< "${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}"
          
          
          # Additional Configuration
          
          # Additional Configuration
          vercel env add VITE_GOOGLE_MAPS_API_KEY production --token=${{ secrets.VERCEL_TOKEN }} <<< "${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}"
          vercel env add VITE_SITE_URL production --token=${{ secrets.VERCEL_TOKEN }} <<< "${{ secrets.VITE_SITE_URL }}"
          vercel env add SLACK_WEBHOOK_URL production --token=${{ secrets.VERCEL_TOKEN }} <<< "${{ secrets.SLACK_WEBHOOK_URL }}"

      - name: Deploy to Vercel
        run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }}

  notify-deployment:
    runs-on: ubuntu-latest
    needs: [validate-environment, sync-environment]
    if: always()
    name: Send Deployment Notifications
    steps:
      - name: Notify successful deployment
        if: needs.sync-environment.result == 'success'
        uses: 8398a7/action-slack@v3
        with:
          status: success
          channel: '#deployments'
          text: |
            ✅ Successful deployment to Vercel Production
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Author: ${{ github.actor }}
            Environment variables synced and validated
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify deployment failure
        if: needs.sync-environment.result == 'failure'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#deployments'
          text: |
            ❌ Deployment failed for ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Author: ${{ github.actor }}
            Check GitHub Actions for details
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}